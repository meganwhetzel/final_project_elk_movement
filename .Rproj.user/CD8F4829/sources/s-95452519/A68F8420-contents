install.packages("ggmap")

library(DBI)
library(tidyverse)
library(lubridate)
library(ggmap)

# Link to created database ####

elk_db <- dbConnect(RSQLite::SQLite(), 
          "/Users/Megan/Desktop/Rep_Sci/Elk_Movement_Project/elk_movement.db")

# Create table ####

gps <- dbGetQuery(elk_db, "SELECT * FROM elk_gps_data;")

# Or create one using R syntax

dbExecute(elk_db, "CREATE TABLE gps (
elk_id varchar(4) NOT NULL,
tag_id varchar(7) NOT NULL,
longitude double,
latitude double,
timestamp double,
temp_c float,
height_above_ellipsoid_m float,
PRIMARY KEY (tag_id)
);")

# Look at the table
head(gps)
str(gps)

# Remove row 1 because it is not needed - repeat of column headers
gps <- gps[-1, ]

# Figure out how to move this into one pipe chain

sapply(gps[,3:4 & 6:7], as.numeric)

# 3, 4, 6, 7
gps$height_above_ellipsoid_m = as.numeric(gps$height_above_ellipsoid_m)
gps$longitude = as.numeric(gps$longitude)
gps$latitude = as.numeric(gps$latitude)
gps$temp_c = as.numeric(gps$temp_c)

# Change timestamp #### (not sure if completely needed)

hms(gps$timestamp)

# Look at unique values for elk #### 
# I have 171 collared elk according to Movebank
# (website says 98 tags) - possibly missing one elk

gps %>% 
  select(elk_id, tag_id) %>% 
  unique() %>%
  View()


# Isolating one single tag_id to plot telemetry points ####

gps %>% 
  filter(elk_id == "878") %>%
  ggplot(aes(x = longitude, y = latitude, color = elk_id)) +
  geom_path(color = "turquoise") +
  labs(x = "Longitude", y = "Latitude", color = "Elk ID number") +
  theme_minimal() +
  theme(legend.position = "bottom")

# Create new table of 8 randomly chosen elk ####
# 878, 1622, 300, 611, 609380B, 32439, 179, 1996

gps %>% 
  filter(elk_id %in% c("1622", "878", "300", "611", 
                       "609380B", "32439", "179", "1996", "609377A")) %>% 
  ggplot(aes(x = longitude, y = latitude, color = elk_id)) +
  geom_path() +
  labs(x = "Longitude", y = "Latitude", color = "Elk ID number") +
  facet_wrap(~ elk_id) +
  scale_color_viridis_d(option = "rocket") + 
  theme_minimal() +
  theme(legend.position = "bottom") +
  theme(axis.text.x = element_text(angle = 90))
  
# Plotted one by one
  
gps %>% 
    filter(elk_id == "1622") %>%
    ggplot(aes(x = longitude, y = latitude, color = elk_id)) +
    geom_path(color = "slateblue") +
    labs(x = "Longitude", y = "Latitude", color = "Elk ID number") +
    theme_minimal() +
    theme(legend.position = "bottom")  

gps %>% 
  filter(elk_id == "300") %>%
  ggplot(aes(x = longitude, y = latitude, color = elk_id)) +
  geom_path(color = "palevioletred") +
  labs(x = "Longitude", y = "Latitude", color = "Elk ID number") +
  theme_minimal() +
  theme(legend.position = "bottom")

gps %>% 
  filter(elk_id == "611") %>%
  ggplot(aes(x = longitude, y = latitude, color = elk_id)) +
  geom_path(color = "chocolate1") +
  labs(x = "Longitude", y = "Latitude", color = "Elk ID number") +
  theme_minimal() +
 # theme(legend.position = "bottom")


# Using geom_hex to create heatmaps of elk ####

gps %>% 
  select(elk_id, longitude, latitude) %>% 
  filter(elk_id == "300") %>% 
  ggplot(aes(x = longitude, y = latitude, color = elk_id
  )) +
  geom_hex() +
  scale_fill_gradient(low = "yellow", high = "red") +
  labs(x = "Longitude", y = "Latitude", color = "Elk ID Number", 
       title = "Heatmap of Most Used Locations for Elk 300") +
  theme_minimal() +
  theme(legend.position = "right")

# Do this for a few others

  
  
  
  
# Filter out top temperatures and plot against elk_id's ####

#old one
gps %>% 
 # select(elk_id, temp_c) %>% 
  group_by(elk_id) %>% 
  mutate(max_temp = max(temp_c)) %>% 
  mutate(min_temp = min(temp_c)) %>% 
  filter(!is.na(max_temp)) %>% # removed 26 elk that had NA for temp
  distinct(elk_id, max_temp, min_temp) %>% 
  ggplot(aes(x = elk_id, y = max_temp, color = elk_id)) +
  geom_boxplot() +
  labs(x = "Elk ID", y = "Temperature (Cº)", color = "Elk ID") +
  scale_color_viridis_d(option = "turbo") + theme_classic() +
  theme(axis.text.x = element_text(angle = 90))

quartz()


gps %>% 
  group_by(elk_id) %>% 
  mutate(max_temp = max(temp_c)) %>% 
  mutate(min_temp = min(temp_c)) %>% 
  filter(!is.na(max_temp)) %>% # removed 26 elk that had NA for temp
  distinct(elk_id, max_temp, min_temp, temp_c) %>% 
  ggplot(aes(x = elk_id)) +
  geom_boxplot(aes(y = max_temp, color = "darkred")) +
  geom_boxplot(aes(y = min_temp, color = "royalblue3")) +
  labs(x = "Elk ID", y = "Temperature (Cº)", color = "Elk ID") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90)) +
  theme(legend.position = "none") 


  
# Compare with distribution of temperatures across study area for 9 to do full 
# facet wrap and choose 9 others than were in the movement section 
# (below nine have temperatures and no movement)

#609374A, 786, 297, 1590, 395, 609372A, 858, 843, 172

# Count of ambient temperatures
gps %>% 
  select(temp_c, elk_id) %>% 
  filter(elk_id == "1590") %>% 
  ggplot(aes(x = temp_c, fill = elk_id)) +
  geom_bar() +
  labs(x = "Temperature (Cº)", y = "Count", 
       fill = "Elk ID Number") + 
  theme_minimal() +
  theme(legend.position = "bottom")

# legend not showing up properly (above and below)
 # Frequency of ambient temperatures
gps %>% 
  select(temp_c, elk_id) %>% 
  filter(elk_id == "1590") %>% 
ggplot(aes(x = temp_c, fill = elk_id)) +
  geom_bar(aes(y = ..prop.., group = 1)) + 
  labs(x = "Temperature (Cº)", y = "Relative frequency", fill = "Elk ID") +
  theme_minimal() +
  theme(legend.position = "bottom")
  

# Google map backgrounds ####

# 1st step:
register_google(key = "AIzaSyBBNFfyr8MePsXSqJDyDDY3r6THen4BH6s", write = TRUE)

# 2nd step:
elk_map <- get_googlemap(center = c(-114.400, 49.400))
elk_map <- get_map(c(-114.400, 49.400))

# 3rd step:
ggmap(elk_map, extent = "normal") #this successfully plotted a map with no pts

# This subsets one elk (878) on the map
solo_elk <- gps %>% 
  filter(elk_id == "878") 

# This subsets nine elk
facet <- gps %>% 
  filter(elk_id %in% c("1622", "878", "300", "611", 
                       "609380B", "32439", "179", "1996", "609377A"))

# Full plot for one elk
qmplot(longitude, latitude, data = solo_elk, color = elk_id, geom = "path", 
       legend = "right") +
  labs(color = "Elk ID")

# Full plot function for nine elk in a facet
qmplot(longitude, latitude, data = facet, color = elk_id, geom = "path", 
       legend = "right") +
  scale_color_viridis_d(option = "rocket") +
  labs(color = "Elk ID") +
  facet_wrap(~ elk_id)

# This shows an overlay of all 9 elk on one single map - super cool!
qmplot(longitude, latitude, data = facet, color = elk_id, geom = "path", 
       legend = "topright", zoom = 10) +
  scale_color_viridis_d(option = "plasma") +
  labs(color = "Elk ID") 

# compare elk 878 and facet wrap with map background to very first plots above
# without map background

# CITATIONS
# properly cite: 

# ggmap, To cite ggmap in publications, please use:

# D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R
# Journal, 5(1), 144-161. URL
# http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf

# A BibTeX entry for LaTeX users is

#@Article{,
#  author = {David Kahle and Hadley Wickham},
#  title = {ggmap: Spatial Visualization with ggplot2},
#  journal = {The R Journal},
#  year = {2013},
#  volume = {5},
#  number = {1},
#  pages = {144--161},
#  url = {https://journal.r-project.org/archive/2013-1/kahle-wickham.pdf},


# Movebank 
# when using dataset, cite original article:
# Ciuti S, Muhly TB, Paton DG, McDevitt AD, Musiani M, Boyce MS (2012) 
# Human selection of elk behavioural traits in a landscape of fear. 
# Proceedings of the Royal Society B 279(1746): 4407-4416. 
# doi:10.1098/rspb.2012.1483

# Movebank data package
# Boyce MS, Ciuti S (2020) Data from: Human selection of elk behavioural traits 
# in a landscape of fear. Movebank Data Repository. doi:10.5441/001/1.j484vk24
